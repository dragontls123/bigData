{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNSi4tyhJuMWu0oCJmWPni6"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"4FdVhteB9_HS","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1669649006883,"user_tz":-540,"elapsed":1922,"user":{"displayName":"N S","userId":"15338044788712442045"}},"outputId":"fd84026f-b539-46ce-f4ab-1fa29229ae6f"},"outputs":[{"output_type":"stream","name":"stdout","text":["Cloning into 'yemoonsaBigdata'...\n","remote: Enumerating objects: 485, done.\u001b[K\n","remote: Counting objects: 100% (122/122), done.\u001b[K\n","remote: Compressing objects: 100% (78/78), done.\u001b[K\n","remote: Total 485 (delta 66), reused 49 (delta 44), pack-reused 363\u001b[K\n","Receiving objects: 100% (485/485), 8.89 MiB | 12.60 MiB/s, done.\n","Resolving deltas: 100% (251/251), done.\n"]}],"source":["!git clone https://github.com/AnalyticsKnight/yemoonsaBigdata/"]},{"cell_type":"code","source":["import pandas as pd\n","import numpy as np\n","X_test = pd.read_csv(\"./yemoonsaBigdata/datasets/Part2/census_X_test.csv\")\n","X_train = pd.read_csv(\"./yemoonsaBigdata/datasets/Part2/census_X_train.csv\")\n","y_train = pd.read_csv(\"./yemoonsaBigdata/datasets/Part2/census_y_train.csv\")"],"metadata":{"id":"fN_UQquq_WhF","executionInfo":{"status":"ok","timestamp":1669649009080,"user_tz":-540,"elapsed":2199,"user":{"displayName":"N S","userId":"15338044788712442045"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":["\n","X_train.describe()"],"metadata":{"id":"2bDvbT5R_Wm1","colab":{"base_uri":"https://localhost:8080/","height":300},"executionInfo":{"status":"ok","timestamp":1669560476587,"user_tz":-540,"elapsed":392,"user":{"displayName":"N S","userId":"15338044788712442045"}},"outputId":"d199382a-d41e-43be-cb0b-e7452284bdeb"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                age  education_num  capital_gain  capital_loss  hours_per_week\n","count  30162.000000   30162.000000  30162.000000  30162.000000    30162.000000\n","mean      38.437902      10.121312   1092.007858     88.372489       40.931238\n","std       13.134665       2.549995   7406.346497    404.298370       11.979984\n","min       17.000000       1.000000      0.000000      0.000000        1.000000\n","25%       28.000000       9.000000      0.000000      0.000000       40.000000\n","50%       37.000000      10.000000      0.000000      0.000000       40.000000\n","75%       47.000000      13.000000      0.000000      0.000000       45.000000\n","max       90.000000      16.000000  99999.000000   4356.000000       99.000000"],"text/html":["\n","  <div id=\"df-e70494d0-7733-44ed-9be9-e194bbb4202a\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>education_num</th>\n","      <th>capital_gain</th>\n","      <th>capital_loss</th>\n","      <th>hours_per_week</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>30162.000000</td>\n","      <td>30162.000000</td>\n","      <td>30162.000000</td>\n","      <td>30162.000000</td>\n","      <td>30162.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>38.437902</td>\n","      <td>10.121312</td>\n","      <td>1092.007858</td>\n","      <td>88.372489</td>\n","      <td>40.931238</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>13.134665</td>\n","      <td>2.549995</td>\n","      <td>7406.346497</td>\n","      <td>404.298370</td>\n","      <td>11.979984</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>17.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>28.000000</td>\n","      <td>9.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>40.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>37.000000</td>\n","      <td>10.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>40.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>47.000000</td>\n","      <td>13.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>45.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>90.000000</td>\n","      <td>16.000000</td>\n","      <td>99999.000000</td>\n","      <td>4356.000000</td>\n","      <td>99.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e70494d0-7733-44ed-9be9-e194bbb4202a')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-e70494d0-7733-44ed-9be9-e194bbb4202a button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-e70494d0-7733-44ed-9be9-e194bbb4202a');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["# 1. 결측치 제거 / 사용할 데이터 선택\n","for i in range(len(X_train)) :\n","  if X_train['capital_gain'][i]>0 :\n","    X_train['capital_gain_yn'][i]=1\n","  else :\n","    X_train['capital_gain_yn'][i]=0"],"metadata":{"id":"XGglEX4xmc6S"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["X_train['capital_gain_yn']=np.where(X_train['capital_gain']>0,1,0)\n","X_train['capital_loss_yn']=np.where(X_train['capital_loss']>0,1,0)\n","\n","X_test['capital_gain_yn']=np.where(X_test['capital_gain']>0,1,0)\n","X_test['capital_loss_yn']=np.where(X_test['capital_loss']>0,1,0)"],"metadata":{"id":"acm3IhE2l5XD","executionInfo":{"status":"ok","timestamp":1669649009080,"user_tz":-540,"elapsed":5,"user":{"displayName":"N S","userId":"15338044788712442045"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["col_num=['age', 'education_num','capital_gain_yn', 'capital_loss_yn','hours_per_week']\n","col_cat=[ 'workclass', 'marital_status', 'occupation','relationship', 'race', 'sex',  'native_country']\n","col_y=['target']"],"metadata":{"id":"AL7oaOvj_WrG","executionInfo":{"status":"ok","timestamp":1669649009081,"user_tz":-540,"elapsed":4,"user":{"displayName":"N S","userId":"15338044788712442045"}}},"execution_count":4,"outputs":[]},{"cell_type":"code","source":["from sklearn.preprocessing import LabelEncoder\n","\n","for col in col_cat :\n","  lb=LabelEncoder()\n","  lb.fit(X_train[col])\n","  X_train[col]=lb.transform(X_train[col])\n","  X_test[col]=lb.transform(X_test[col])"],"metadata":{"id":"E5IWNqA9oEla","executionInfo":{"status":"ok","timestamp":1669649010740,"user_tz":-540,"elapsed":1663,"user":{"displayName":"N S","userId":"15338044788712442045"}}},"execution_count":5,"outputs":[]},{"cell_type":"code","source":["# 2. 데이터 스플릿\n","from sklearn.model_selection import train_test_split\n","\n","X_tr, X_val, y_tr, y_val = train_test_split(X_train,y_train,test_size=0.3)"],"metadata":{"id":"podPk5xX1nu-","executionInfo":{"status":"ok","timestamp":1669649010741,"user_tz":-540,"elapsed":3,"user":{"displayName":"N S","userId":"15338044788712442045"}}},"execution_count":6,"outputs":[]},{"cell_type":"code","source":["# 3. 프리프로세싱\n","from sklearn.preprocessing import MinMaxScaler\n","\n","scaler=MinMaxScaler()\n","scaler.fit(X_tr[col_num])\n","X_tr[col_num]=scaler.transform(X_tr[col_num])\n","X_val[col_num]=scaler.transform(X_val[col_num])\n","X_test[col_num]=scaler.transform(X_test[col_num])"],"metadata":{"id":"yQTAdfEUuaYU","executionInfo":{"status":"ok","timestamp":1669649011097,"user_tz":-540,"elapsed":359,"user":{"displayName":"N S","userId":"15338044788712442045"}}},"execution_count":7,"outputs":[]},{"cell_type":"code","source":["# 4. 모델링 및 평가\n","from sklearn.ensemble import RandomForestClassifier\n","\n","rf=RandomForestClassifier()\n","rf.fit(X_tr,y_tr)\n","pred=rf.predict(X_val)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9uOaTB-pv330","executionInfo":{"status":"ok","timestamp":1669649017650,"user_tz":-540,"elapsed":3228,"user":{"displayName":"N S","userId":"15338044788712442045"}},"outputId":"e5fdc9ff-27df-4cd9-947e-47e9e3657ed8"},"execution_count":8,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:5: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().\n","  \"\"\"\n"]}]},{"cell_type":"code","source":["\n","from sklearn.metrics import roc_auc_score\n","\n","pred_proba=rf.predict_proba(X_val)\n","\n","score=roc_auc_score(y_val,pred)\n","score_proba=roc_auc_score(y_val,pred_proba[:,1])\n","\n","print('score_pred:',score)\n","print('score_proba:',score_proba)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"c4hru30_wIR4","executionInfo":{"status":"ok","timestamp":1669649018685,"user_tz":-540,"elapsed":1037,"user":{"displayName":"N S","userId":"15338044788712442045"}},"outputId":"93f2a08b-47bb-400f-d4e0-ec63788f0e75"},"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["score_pred: 0.7775003568991553\n","score_proba: 0.8965361790965801\n"]}]},{"cell_type":"code","source":["from lightgbm import LGBMClassifier\n","rf=LGBMClassifier()\n","rf.fit(X_tr,y_tr)\n","pred=rf.predict(X_val)\n","from sklearn.metrics import roc_auc_score\n","\n","pred_proba=rf.predict_proba(X_val)\n","\n","score=roc_auc_score(y_val,pred)\n","score_proba=roc_auc_score(y_val,pred_proba[:,1])\n","\n","print('score_pred:',score)\n","print('score_proba:',score_proba)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Mr9nYrm71itU","executionInfo":{"status":"ok","timestamp":1669649058143,"user_tz":-540,"elapsed":1277,"user":{"displayName":"N S","userId":"15338044788712442045"}},"outputId":"b9d8a91f-f003-4e95-9154-6cd3fa002f24"},"execution_count":10,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/sklearn/preprocessing/_label.py:98: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  y = column_or_1d(y, warn=True)\n","/usr/local/lib/python3.7/dist-packages/sklearn/preprocessing/_label.py:133: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  y = column_or_1d(y, warn=True)\n"]},{"output_type":"stream","name":"stdout","text":["score_pred: 0.8059963314695994\n","score_proba: 0.9274526502872876\n"]}]},{"cell_type":"code","source":["from xgboost import XGBClassifier\n","rf=XGBClassifier()\n","rf.fit(X_tr,y_tr)\n","pred=rf.predict(X_val)\n","from sklearn.metrics import roc_auc_score\n","\n","pred_proba=rf.predict_proba(X_val)\n","\n","score=roc_auc_score(y_val,pred)\n","score_proba=roc_auc_score(y_val,pred_proba[:,1])\n","\n","print('score_pred:',score)\n","print('score_proba:',score_proba)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cSnbAE_i1tBJ","executionInfo":{"status":"ok","timestamp":1669649076019,"user_tz":-540,"elapsed":1657,"user":{"displayName":"N S","userId":"15338044788712442045"}},"outputId":"9f11db77-1f53-4e87-c963-ab4e6c8288a6"},"execution_count":11,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/sklearn/preprocessing/_label.py:98: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  y = column_or_1d(y, warn=True)\n","/usr/local/lib/python3.7/dist-packages/sklearn/preprocessing/_label.py:133: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().\n","  y = column_or_1d(y, warn=True)\n"]},{"output_type":"stream","name":"stdout","text":["score_pred: 0.7780893059915838\n","score_proba: 0.91873691096905\n"]}]},{"cell_type":"code","source":["pd.DataFrame({'index': X_test.index, 'target': pred}).to_csv('./yemoonsaBigdata/res/003000000.csv', index=False)"],"metadata":{"id":"lW0SagtAzxzf"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":[],"metadata":{"id":"_EtlU_-TcUUi"}}]}